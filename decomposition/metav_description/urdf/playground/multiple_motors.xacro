<?xml version="1.0"?>
<robot name="multiple_motors" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="is_simulation" default="true" />

    <link name="base_footprint">
    </link>

    <!-- raise the robot a bit higher to prevent it from stucking in the ground -->
    <joint name="joint_base_to_footprint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.2" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>

    <link name="base_link" />

    <xacro:include filename="$(find metav_description)/urdf/playground/motor.xacro" />
    <xacro:motor name="motor1" connected_to="base_link" x="0" y="0" />
    <xacro:motor name="motor2" connected_to="base_link" x="3" y="0" />


    <xacro:if value="$(arg is_simulation)">
        <ros2_control
            name="multiple_motors_control" type="system">
            <hardware>
                <plugin>ign_ros2_control/IgnitionSystem</plugin>
            </hardware>
            <joint name="motor1_joint">
                <command_interface name="effort" />
                <state_interface name="position" />
                <state_interface name="velocity" />
                <state_interface name="effort" />
            </joint>
            <joint name="motor2_joint">
                <command_interface name="position" />
                <state_interface name="position" />
                <state_interface name="velocity" />
                <state_interface name="effort" />
            </joint>
        </ros2_control>
    </xacro:if>

    <xacro:unless value="$(arg is_simulation)">
        <ros2_control
            name="multiple_motors_control_dji" type="system">
            <hardware>
                <plugin>meta_hardware/MetaRobotDjiMotorNetwork</plugin>
                <param name="can_network_name">can0</param>
            </hardware>
            <joint name="motor1_joint">
                <command_interface name="effort" />
                <state_interface name="position" />
                <state_interface name="velocity" />
                <state_interface name="effort" />
                <param name="motor_model">GM6020</param>
                <param name="motor_id">1</param>
                <param name="mechanical_reduction">1.0</param>
                <param name="offset">0.0</param>
            </joint>
        </ros2_control>

        <ros2_control
            name="multiple_motors_control_mi" type="system">
            <hardware>
                <plugin>meta_hardware/MetaRobotMiMotorNetwork</plugin>
                <param name="can_network_name">can0</param>
            </hardware>
            <joint name="motor2_joint">
                <command_interface name="position" />
                <state_interface name="position" />
                <state_interface name="velocity" />
                <state_interface name="effort" />
                <param name="motor_model">CyberGear</param>
                <param name="motor_id">1</param>
                <param name="mechanical_reduction">1.0</param>
                <!-- cansend can_2 01000001#0000.0000.0000.000 -->
                <!-- can_2  020001FD   [8]  77 2C 7F F5 7F FF 01 2 -->
                <param name="offset">0.86652061961</param> <!-- -0.7338292567 (int("772C",16)-65535/2)/(65535/2)*4*pi -->
                <param name="control_mode">dynamic</param>
                <param name="Kp">30.0</param>
                <param name="Kd">1.0</param>
            </joint>
        </ros2_control>
    </xacro:unless>

    <xacro:if
        value="$(arg is_simulation)">
        <gazebo>
            <plugin filename="ign_ros2_control-system"
                name="ign_ros2_control::IgnitionROS2ControlPlugin">
                <parameters>$(find meta_bringup)/config/multiple_motors.yaml</parameters>
            </plugin>
        </gazebo>
    </xacro:if>
</robot>